services:

  #Load Balancer
  nginx:
    image: nginx:latest
    container_name: nginx_loadbalancer
    ports:
      - "80:80"
    depends_on:
      - meal_service
      - user_service
      - sync_service
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - backend_network

  # Meal Service
  meal_service:
    build: ./backend/meal_service/api
    container_name: meal_service
    ports:
      - "8001:8001"
    depends_on:
      - meal-postgres
      - user_service
    networks:
      - backend_network
      - meal_network

  # User Service
  user_service:
    build: ./backend/user_service/api
    container_name: user_service
    ports:
      - "8002:8002"
    depends_on:
      - user-postgres
    networks:
      - backend_network
      - user_network

  # Sync Service
  sync_service:
    build: ./backend/sync_service/api
    container_name: sync_service
    ports:
      - "8003:8003"
    depends_on:
      - meal_service
      - user_service
      - rabbitmq
    networks:
      - backend_network

  # Meal PostgreSQL Database
  meal-postgres:
    image: postgres:latest
    container_name: meal-postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: meal_db
    ports:
      - "5433:5432"
    volumes:
      - meal_postgres_data:/var/lib/postgresql/data
      - ./backend/meal_service/database/mealdb.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - meal_network

  # User PostgreSQL Database
  user-postgres:
    image: postgres:latest
    container_name: user-postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: user_db
    ports:
      - "5434:5432"
    volumes:
      - user_postgres_data:/var/lib/postgresql/data
      - ./backend/user_service/database/userdb.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - user_network

  # RabbitMQ Service
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # RabbitMQ Standard Port f√ºr Messaging
      - "15672:15672" # RabbitMQ Management UI (http://localhost:15672)
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend_network

volumes:
  meal_postgres_data:
  user_postgres_data:

networks:
  backend_network:
    driver: bridge
  meal_network:
    driver: bridge
  user_network:
    driver: bridge
